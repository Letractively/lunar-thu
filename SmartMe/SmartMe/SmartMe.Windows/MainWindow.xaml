<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d" xmlns:ic="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
	
	xmlns:SmartMe_Core_Data="clr-namespace:SmartMe.Core.Data;assembly=SmartMe.Core"
	x:Class="SmartMe.Windows.MainWindow"
	x:Name="Window"
	Title="MainWindow"
	Width="251" Height="265" Topmost="True" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" AllowDrop="True" Drop="Window_Drop" DragLeave="Window_DragLeave" DragEnter="Window_DragEnter" DragOver="Window_DragOver">
	<Window.Resources>
		<SmartMe_Core_Data:SearchEngineResult x:Key="SearchEngineResultDataSource" d:IsDataSource="True"/>
		<AlternationConverter x:Key="AlternationConverter"/>
		<Storyboard x:Key="LoadingStoryboard">
			<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ScrollViewer" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="00:00:01.2000000" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="00:00:01.6000000" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GrabSuggestionTextBlock" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="00:00:02.3000000" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InputTextBox" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="00:00:00.7000000" Value="0"/>
				<SplineDoubleKeyFrame KeyTime="00:00:01.7000000" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="DragEnterStoryboard">
			<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.Opacity)">
				<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
				<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.5" KeySpline="0,0,0.49,1"/>
				<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1"/>
				<SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0.5" KeySpline="0,0,0.5,1"/>
				<SplineDoubleKeyFrame KeyTime="00:00:00.8000000" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<DataTemplate x:Key="ItemTemplate">
			<StackPanel>
				<TextBlock Text="{Binding Content}" Height="10"/>
				<TextBlock Text="{Binding Time}" Height="10"/>
			</StackPanel>
		</DataTemplate>
		<DataTemplate x:Key="ItemTemplate1">
			<StackPanel>
				<TextBlock Text="{Binding Content}"/>
				<TextBlock Text="{Binding Time}"/>
				<TextBlock Text="{Binding Title}"/>
				<TextBlock Text="{Binding Uri}"/>
			</StackPanel>
		</DataTemplate>
		<DataTemplate x:Key="ItemTemplate2">
			<StackPanel>
				<TextBlock Text="{Binding Content}"/>
				<TextBlock Text="{Binding Time}"/>
				<TextBlock Text="{Binding Title}"/>
				<TextBlock Text="{Binding Uri}"/>
			</StackPanel>
		</DataTemplate>
		<DataTemplate x:Key="ItemTemplate3">
			<StackPanel>
				<TextBlock Text="{Binding Content}"/>
				<TextBlock Text="{Binding Time}"/>
				<TextBlock Text="{Binding Title}"/>
				<TextBlock Text="{Binding Uri}"/>
			</StackPanel>
		</DataTemplate>
		<Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter" RepeatBehavior="Forever">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.4"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="2.033"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="2.228"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="-1.504"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
									<SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0.28"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="Bd" OpacityMask="{x:Null}" SnapsToDevicePixels="true" Background="{Binding Mode=OneWay}" BorderBrush="{Binding Mode=OneWay}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
							<ContentPresenter x:Name="contentPresenter" OpacityMask="Black" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								<Setter Property="Background" TargetName="Bd" Value="{Binding Mode=OneWay}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="DragDrop.PreviewDragEnter">
			<BeginStoryboard x:Name="DragEnterStoryboard_BeginStoryboard" Storyboard="{StaticResource DragEnterStoryboard}"/>
		</EventTrigger>
	</Window.Triggers>

	<Grid x:Name="LayoutRoot" Background="Black">
		<Grid.RowDefinitions>
			<RowDefinition/>
			<RowDefinition Height="0*"/>
			<RowDefinition Height="0*"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="0*"/>
			<ColumnDefinition Width="0*"/>
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Button x:Name="GrabButton" Margin="8,8,-40,0" VerticalAlignment="Top" Height="24" Content="Grab Screen" ClickMode="Press" Click="GrabButton_Click" Grid.Column="2" Foreground="Black" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" d:IsHidden="True">
			<Button.BindingGroup>
				<BindingGroup/>
			</Button.BindingGroup>
			<Button.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Button.RenderTransform>
		</Button>
		<ScrollViewer x:Name="ScrollViewer" Margin="8,71,-272,12.725" Grid.Column="2" Visibility="Collapsed">
			<TextBox x:Name="ResultTextBox" TextWrapping="Wrap" Background="#FFFEFEFE" SpellCheck.IsEnabled="True" FontSize="10.667" RenderTransformOrigin="0.5,0.5">
				<TextBox.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</TextBox.RenderTransform>
			</TextBox>
		</ScrollViewer>
		<TextBlock x:Name="GrabSuggestionTextBlock" Margin="8,0,0,0" VerticalAlignment="Top" Height="25" Grid.Column="2" Foreground="#FF825757" TextWrapping="Wrap" d:LayoutOverrides="HorizontalAlignment, GridBox" RenderTransformOrigin="0.5,0.5"><TextBlock.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</TextBlock.RenderTransform><Run Text="["/><Run Text="Or you can also drag word to the window"/><Run Text="]"/></TextBlock>
		<TextBlock x:Name="OutputTextBlock" Margin="8,47,157,0" VerticalAlignment="Top" Height="15.973" Grid.Column="2" Foreground="White" TextWrapping="Wrap"><Run Text="结果"/><Run Text=":"/><LineBreak/><Run Text=""/></TextBlock>
		<ListBox x:Name="OutputListBox" Margin="8,66.973,13,12.725" Background="White" BorderBrush="Black" Foreground="Black" IsSynchronizedWithCurrentItem="True" Grid.Column="2" ItemTemplate="{DynamicResource ItemTemplate}" DataContext="{Binding Results, Converter={StaticResource AlternationConverter}, Mode=TwoWay, Source={StaticResource SearchEngineResultDataSource}, UpdateSourceTrigger=Explicit}" ItemsSource="{Binding Mode=OneWay}" ItemContainerStyle="{DynamicResource ListBoxItemStyle}" MouseDoubleClick="OutputListBox_MouseDoubleClick"/>
		<TextBox x:Name="InputTextBox" Margin="8,16,14,0" VerticalAlignment="Top" Height="27" Grid.Column="2" Text="搜索栏" TextWrapping="Wrap" d:LayoutOverrides="HorizontalAlignment" LostKeyboardFocus="InputTextBox_LostKeyboardFocus" GotKeyboardFocus="InputTextBox_GotKeyboardFocus" PreviewKeyDown="InputTextBox_PreviewKeyDown"/>
	</Grid>
</Window>